name: Deploy to VPS

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run tests
        run: npm run test || echo "No tests configured"
      
      - name: Build application
        run: npm run build

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.VPS_SSH_KEY }}
      
      - name: Add VPS to known hosts
        run: |
          ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts
      
      - name: Create deployment directory
        run: |
          ssh ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "mkdir -p /opt/lalumiere"
      
      - name: Copy files to VPS
        run: |
          rsync -avz --delete \
            --exclude '.git' \
            --exclude 'node_modules' \
            --exclude '.svelte-kit' \
            --exclude 'build' \
            ./ ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}:/opt/lalumiere/
      
      - name: Deploy on VPS
        run: |
          ssh ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} << 'EOF'
            cd /opt/lalumiere
            
            # Install Docker if not present
            if ! command -v docker &> /dev/null; then
              curl -fsSL https://get.docker.com -o get-docker.sh
              sh get-docker.sh
              sudo usermod -aG docker $USER
            fi
            
            # Install Docker Compose if not present
            if ! command -v docker-compose &> /dev/null; then
              sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
            fi
            
            # Make deploy script executable
            chmod +x deploy.sh
            
            # Run deployment
            ./deploy.sh
          EOF
      
      - name: Health check
        run: |
          sleep 60
          curl -f http://${{ secrets.VPS_HOST }}:3000 || exit 1
      
      - name: Notify deployment success
        if: success()
        run: |
          echo "✅ Déploiement réussi sur ${{ secrets.VPS_HOST }}"
      
      - name: Notify deployment failure
        if: failure()
        run: |
          echo "❌ Échec du déploiement sur ${{ secrets.VPS_HOST }}"
